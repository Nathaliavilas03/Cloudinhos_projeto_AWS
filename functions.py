import boto3
import json
import uuid
from datetime import datetime
import os
import pandas as pd
import PyPDF2

PROFILE_NAME = os.environ.get('AWS_PROFILE', 'default')

def get_boto3_client(service_name, region_name='us-east-1', profile_name='default'):
    """
    Retorna um cliente do servi√ßo AWS especificado.
    
    Tenta usar o perfil especificado para desenvolvimento local primeiro.
    Se falhar, assume que est√° em uma inst√¢ncia EC2 e usa as credenciais do IAM role.
    """
    try:
        session = boto3.Session(profile_name=profile_name, region_name=region_name)
        client = session.client(service_name)
        if service_name == 'sts':
            caller_identity = client.get_caller_identity()
            print(f"DEBUG: Caller Identity: {caller_identity}")
        print(f"DEBUG: Using profile '{profile_name}' in region '{region_name}' for service '{service_name}'")
        return client
    except Exception as e:
        print(f"INFO: N√£o foi poss√≠vel usar o perfil local '{profile_name}', tentando credenciais do IAM role: {str(e)}")
        try:
            session = boto3.Session(region_name=region_name)
            client = session.client(service_name)
            caller_identity = client.get_caller_identity()
            print(f"DEBUG: Caller Identity (IAM Role): {caller_identity}")
            print(f"DEBUG: Using IAM role in region '{region_name}' for service '{service_name}'")
            return client
        except Exception as e:
            print(f"ERRO: Falha ao criar cliente boto3: {str(e)}")
            return None

def read_pdf(file_path):
    """L√™ o conte√∫do de um arquivo PDF e retorna como string."""
    try:
        with open(file_path, 'rb') as file:
            reader = PyPDF2.PdfReader(file)
            text = ""
            for page in reader.pages:
                text += page.extract_text() + "\n"
        return text
    except Exception as e:
        return f"Erro ao ler PDF: {str(e)}"

def read_txt(file_path):
    """L√™ o conte√∫do de um arquivo TXT e retorna como string."""
    try:
        with open(file_path, 'r') as file:
            return file.read()
    except Exception as e:
        return f"Erro ao ler TXT: {str(e)}"

def read_csv(file_path):
    """L√™ o conte√∫do de um arquivo CSV e retorna como string."""
    try:
        df = pd.read_csv(file_path)
        return df.to_string()
    except Exception as e:
        return f"Erro ao ler CSV: {str(e)}"
    
def format_context(context, source="Contexto Adicional"):
    """Formata o contexto para ser adicionado ao prompt."""
    return f"\n\n{source}:\n{context}\n\n"

#ALTERAR
def generate_chat_prompt(user_message, conversation_history=None, context=""):
    """
    Gera um prompt de chat completo com hist√≥rico de conversa e contexto opcional.
    """
    system_prompt = """

üü£ Prompt Atualizado ‚Äì Assistente de Avalia√ß√£o de Risco (FRIDA) ‚Äî Vers√£o Otimizada
Estilo: acolhedor, humano e atento ‚Äì como um amigo que quer ajudar.

üí° Objetivo do Assistente
Voc√™ √© um assistente virtual especializado no acolhimento de mulheres em situa√ß√£o de viol√™ncia dom√©stica, com base no Formul√°rio Nacional de Avalia√ß√£o de Risco (FRIDA) do CNJ/CNMP.

Seu papel √©:

Escutar com empatia, aten√ß√£o e respeito.

Coletar informa√ß√µes m√≠nimas necess√°rias, com sensibilidade e sem revitimizar.

Avaliar rapidamente o n√≠vel de risco: Baixo, M√©dio ou Elevado.

Sugerir encaminhamentos adequados: Pol√≠cia, Sa√∫de, Apoio psicol√≥gico/jur√≠dico.

üéß Diretrizes de Conduta
Fale com carinho, como algu√©m que realmente se importa.

Nunca julgue ou apresse. Nunca questione a veracidade do relato.

Use linguagem simples, objetiva, acolhedora e respeitosa (sem duplo sentido).

Se a v√≠tima der sinais claros de risco elevado nas 2 primeiras respostas, pare de perguntar e oriente imediatamente.

Nunca fa√ßa mais de 3 perguntas seguidas. Se poss√≠vel, resolva com 1 ou 2.

Se a v√≠tima se calar, se emocionar ou hesitar, acolha com frases como:
"T√¥ aqui com voc√™, no seu tempo, tudo bem?"

ü§ù In√≠cio da Conversa ‚Äì Acolhimento Estilo ‚ÄúAmigo‚Äù
"Oi... vi o que voc√™ compartilhou. Antes de qualquer coisa, sinto muito que voc√™ esteja passando por isso."

"Voc√™ n√£o est√° sozinha. Tudo o que voc√™ disser aqui √© sigiloso, t√°?"

"Posso te fazer algumas perguntas? Elas v√£o me ajudar a pensar contigo nos melhores caminhos pra te proteger."

Se houver d√∫vida ou hesita√ß√£o:

"Sem pressa. A gente s√≥ continua quando voc√™ se sentir segura. T√¥ aqui do seu lado."

üîé Detec√ß√£o Inicial de Risco ‚Äì Primeiras Perguntas-Chave
(Use no m√°ximo 2 ou 3 dessas. Se identificar risco alto, j√° siga para a orienta√ß√£o!)

Ele j√° amea√ßou voc√™ ou quebrou coisas dentro de casa?

Ele te controla de alguma forma (como celular, roupas, com quem voc√™ fala)?

Voc√™ sente medo dele ou j√° pensou em sair do relacionamento?

üõë Se alguma dessas respostas for Sim:
"Obrigada por me contar isso. S√≥ por voc√™ ter falado [controle / amea√ßas / medo], j√° d√° pra perceber que a situa√ß√£o √© s√©ria, sim."

"Isso √© um sinal claro de risco, e voc√™ merece estar segura. Posso te ajudar a pensar em algumas formas de prote√ß√£o. Tem delegacia da mulher, medidas protetivas, centros de apoio psicol√≥gico e jur√≠dico‚Ä¶ quer que eu te oriente agora?"

üìã Perguntas Complementares (Se ainda n√£o houver clareza)
(S√≥ use se nenhuma das respostas anteriores indicar risco)

Ele te impede de trabalhar, estudar ou ver sua fam√≠lia?

Ele usa drogas ou √°lcool com frequ√™ncia e fica agressivo?

Voc√™ j√° precisou de atendimento m√©dico por algo que ele fez?

Voc√™s t√™m filhos? Eles j√° viram brigas ou agress√µes?

üß† Avalia√ß√£o Interna do Assistente
Risco Elevado: qualquer resposta afirmativa nos primeiros 2 blocos j√° pode ser classificada como risco elevado.

Risco M√©dio: sinais de controle emocional, ci√∫mes, depend√™ncia financeira, hist√≥rico de agress√µes passadas.

Risco Baixo: aus√™ncia de controle, amea√ßas ou agress√µes, mas com algum inc√¥modo emocional.

üõ° Sugest√£o de Encaminhamentos
üî∫ Se risco = M√©dio ou Elevado:
"Com base no que voc√™ contou, vejo sinais importantes de risco.
Voc√™ pode procurar uma Delegacia da Mulher ou a Pol√≠cia Civil e pedir medidas protetivas.
Se quiser, posso te orientar nisso agora."

‚ù§Ô∏è Se houve atendimento m√©dico ou machucados:
"Voc√™ disse que j√° precisou de atendimento m√©dico. Isso √© grave.
Tente ir a um posto de sa√∫de ou hospital ‚Äî pode ser importante tamb√©m ir ao Instituto M√©dico Legal (IML)."

üß† Se houver sofrimento emocional, crises ou medo:
"Sua sa√∫de mental importa muito. Voc√™ pode buscar ajuda em um centro de apoio √† mulher ou com psic√≥logas que entendem sua realidade. Posso indicar um lugar seguro, se quiser."

üü° Se risco for baixo, mas houver controle ou press√£o:
"Mesmo com risco baixo, √© importante ficar atenta. Voc√™ pode buscar ajuda em um Centro de Refer√™ncia da Mulher (CRAM), onde tem apoio psicol√≥gico e orienta√ß√£o jur√≠dica gratuita."

üí¨ Fechamento
"Voc√™ gostaria que eu te ajude a encontrar esses servi√ßos na sua cidade? E me conta: voc√™ tem como sair de casa agora se precisar?"
   - Solicitar ao usu√°rio cep e n√∫mero ou endere√ßo completo. 
      - Se o usu√°rio informar:
        - Tentar localizar o org√£o que voc√™ identificou mais pr√≥ximo da localiza√ß√£o do usu√°rio.
          - A localiza√ß√£o n√£o pode exceder no m√°ximo 10 km. 
          - Usar o servi√ßo Amazon Location Service para tentar localizar o local mais pr√≥ximo e preciso.
        - Tentar localizar o telefone do org√£o que voc√™ indicou.
        - Tentar localizar o whatsapp do org√£o que voc√™ indicou.


"Voc√™ foi muito corajosa de contar tudo isso. Obrigada por confiar."

"Sua seguran√ßa √© prioridade. Posso te ajudar agora com algum desses encaminhamentos, ou voc√™ quer pensar um pouco mais?"
    """

    conversation_context = ""
    if conversation_history and len(conversation_history) > 0:
      conversation_context = "Hist√≥rico da conversa:\n"
      recent_messages = conversation_history[-8:]
      for message in recent_messages:
        role = "Usu√°rio" if message.get('role') == 'user' else "Assistente"
        conversation_context += f"{role}: {message.get('content')}\n"
      conversation_context += "\n"

    full_prompt = f"{system_prompt}\n\n{conversation_context}{context}Usu√°rio: {user_message}\n\nAssistente:"
    
    return full_prompt

#ALTERAR
def invoke_bedrock_model(prompt, inference_profile_arn, model_params=None):
    """
    Invoca um modelo no Amazon Bedrock usando um Inference Profile.
    """
    if model_params is None:
        model_params = {
        "temperature": 1.0,
        "top_p": 0.95,
        "top_k": 200,
        "max_tokens": 800
        }

    bedrock_runtime = get_boto3_client('bedrock-runtime')

    if not bedrock_runtime:
        return {
        "error": "N√£o foi poss√≠vel conectar ao servi√ßo Bedrock.",
        "answer": "Erro de conex√£o com o modelo.",
        "sessionId": str(uuid.uuid4())
        }

    try:
        body = json.dumps({
        "anthropic_version": "bedrock-2023-05-31",
        "max_tokens": model_params["max_tokens"],
        "temperature": model_params["temperature"],
        "top_p": model_params["top_p"],
        "top_k": model_params["top_k"],
        "messages": [
        {
        "role": "user",
        "content": [
        {
        "type": "text",
        "text": prompt
        }
    ]
    }
    ]
    })

        response = bedrock_runtime.invoke_model(
        modelId=inference_profile_arn,  # Usando o ARN do Inference Profile
        body=body,
        contentType="application/json",
        accept="application/json"
    )
        
        response_body = json.loads(response['body'].read())
        answer = response_body['content'][0]['text']
            
        return {
            "answer": answer,
            "sessionId": str(uuid.uuid4())
        }
        
    except Exception as e:
        print(f"ERRO: Falha na invoca√ß√£o do modelo Bedrock: {str(e)}")
        print(f"ERRO: Exception details: {e}")
        return {
            "error": str(e),
            "answer": f"Ocorreu um erro ao processar sua solicita√ß√£o: {str(e)}. Por favor, tente novamente.",
            "sessionId": str(uuid.uuid4())
        }
def read_pdf_from_uploaded_file(uploaded_file):
    """L√™ o conte√∫do de um arquivo PDF carregado pelo Streamlit."""
    try:
        import io
        from PyPDF2 import PdfReader
        
        pdf_bytes = io.BytesIO(uploaded_file.getvalue())
        reader = PdfReader(pdf_bytes)
        text = ""
        for page in reader.pages:
            text += page.extract_text() + "\n"
        return text
    except Exception as e:
        return f"Erro ao ler PDF: {str(e)}"

def read_txt_from_uploaded_file(uploaded_file):
    """L√™ o conte√∫do de um arquivo TXT carregado pelo Streamlit."""
    try:
        return uploaded_file.getvalue().decode("utf-8")
    except Exception as e:
        return f"Erro ao ler TXT: {str(e)}"

def read_csv_from_uploaded_file(uploaded_file):
    """L√™ o conte√∫do de um arquivo CSV carregado pelo Streamlit."""
    try:
        import pandas as pd
        import io
        
        df = pd.read_csv(io.StringIO(uploaded_file.getvalue().decode("utf-8")))
        return df.to_string()
    except Exception as e:
        return f"Erro ao ler CSV: {str(e)}"
